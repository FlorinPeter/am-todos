name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'

    - name: Install frontend dependencies
      run: npm ci

    - name: Install backend dependencies
      run: cd server && npm ci

    - name: Run all frontend tests with coverage
      run: npm run test:coverage

    - name: Generate Coverage Summary
      if: matrix.node-version == '22.x'
      run: |
        echo "## Test Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Generated at: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        # Check if coverage-summary.json exists
        if [ -f coverage/coverage-summary.json ]; then
          # Show coverage summary in GitHub Actions summary
          cat coverage/coverage-summary.json | jq -r '
            "| Metric | Coverage |",
            "|--------|----------|",
            "| Lines | \(.total.lines.pct)% |",
            "| Statements | \(.total.statements.pct)% |",
            "| Functions | \(.total.functions.pct)% |",
            "| Branches | \(.total.branches.pct)% |"
          ' >> $GITHUB_STEP_SUMMARY
        else
          echo "Coverage summary file not found. Check the test logs for coverage details." >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload coverage reports
      if: matrix.node-version == '22.x'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        retention-days: 30

    - name: Build frontend
      run: npm run build

    - name: Test Docker build
      run: docker build -t test-image .